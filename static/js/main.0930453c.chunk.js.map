{"version":3,"sources":["App3.js","reportWebVitals.js","index.js"],"names":["Background","styled","div","Title","Wrapper","Input","input","SingleTodoWrapper","TodoContent","props","isDone","ButtonWrapper","Button","button","whichTabActive","Navbar","content","handleContentChange","handleAdd","handleShow","style","marginBottom","type","value","onChange","placeholder","size","onClick","current","showAll","showDone","showUndo","SingleTodo","todo","handleToggle","handleEditClick","handleDelete","handleEditChange","handleEditConfirm","id","isEditing","defaultValue","App3","useState","setContent","useRef","editContent","setEditContent","showType","setShowType","todos","setTodos","e","target","filter","map","alert","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0930453c.chunk.js","sourcesContent":["import styled from \"styled-components\"; // 引入一個可以寫 css 的 package\nimport React, { useState, useRef } from \"react\"; // 要引入才可以用 state, ref\n// 底下就是用 styled 寫的 css ，要 .創造的標籤\n// 然後就可以打一些 css, sass, scss 的寫法\nconst Background = styled.div``;\nconst Title = styled.div`\n  color: black;\n  font-size: 100px;\n  text-align: center;\n  margin-bottom: 40px;\n  font-weight: bolder;\n  -webkit-text-stroke: 3px #fff;\n`;\nconst Wrapper = styled.div`\n  width: 1000px;\n  height: auto;\n  margin: auto;\n  margin-top: 50px;\n`;\nconst Input = styled.input`\n  margin-right: 20px;\n  border-radius: 8px;\n  padding: 18px;\n  font-size: 20px;\n  border: black solid 2px;\n`;\nconst SingleTodoWrapper = styled.div`\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 2px solid white;\n  & + & {\n    margin-top: 20px;\n  }\n  margin-top: 15px;\n`;\nconst TodoContent = styled.div`\n  padding: 15px;\n  font-size: 25px;\n  color: rgba(2, 50, 80);\n  word-break: break-all;\n  width: 600px;\n  ${(props) => (props.isDone ? \"text-decoration: line-through\" : \"\")}\n`;\nconst ButtonWrapper = styled.div``;\nconst Button = styled.button`\n  font-size: 25px;\n  padding: 15px;\n  color: white;\n  margin-right: 10px;\n  border-radius: 10px;\n  background: black;\n  border: white 2px outset;\n  transition: 0.5s;\n  &:hover {\n    color: black;\n    background: white;\n    border: black 2px outset;\n    transition: 0.2s;\n  }\n  ${(props) =>\n    !props.whichTabActive\n      ? \"\"\n      : props.whichTabActive\n      ? `color: black;\n  background: white;\n  border: black 2px outset;\n  transition: 0.2s;`\n      : \"\"}\n`;\nfunction Navbar({\n  content,\n  handleContentChange,\n  handleAdd,\n  handleShow,\n  whichTabActive,\n}) {\n  return (\n    <div style={{ marginBottom: \"45px\" }}>\n      <Input\n        type=\"text\"\n        value={content}\n        onChange={handleContentChange}\n        placeholder=\"type anything you want to do\"\n        size=\"30\"\n      />\n      <Button onClick={handleAdd}>add todo</Button>\n      <Button\n        whichTabActive={whichTabActive.current.showAll}\n        onClick={handleShow}\n      >\n        show all\n      </Button>\n      <Button\n        whichTabActive={whichTabActive.current.showDone}\n        onClick={handleShow}\n      >\n        show done\n      </Button>\n      <Button\n        whichTabActive={whichTabActive.current.showUndo}\n        onClick={handleShow}\n      >\n        show undo\n      </Button>\n    </div>\n  );\n}\nfunction SingleTodo({\n  todo,\n  handleToggle,\n  handleEditClick,\n  handleDelete,\n  handleEditChange,\n  handleEditConfirm,\n}) {\n  return (\n    <SingleTodoWrapper id={todo.id}>\n      {todo.isEditing ? (\n        <Input\n          type=\"text\"\n          defaultValue={todo.content}\n          size=\"30\"\n          onChange={handleEditChange}\n        />\n      ) : (\n        <TodoContent isDone={todo.isDone}>{todo.content}</TodoContent>\n      )}\n      <ButtonWrapper>\n        {todo.isEditing ? null : (\n          <Button onClick={() => handleToggle(todo.id)}>\n            {todo.isDone ? \"undo\" : \"done\"}\n          </Button>\n        )}\n        {todo.isEditing ? (\n          <Button onClick={() => handleEditClick(todo.id)}>Cancel</Button>\n        ) : (\n          <Button onClick={() => handleEditClick(todo.id)}>Edit</Button>\n        )}\n        {todo.isEditing ? (\n          <Button onClick={() => handleEditConfirm(todo.id)}>Confirm</Button>\n        ) : (\n          <Button onClick={() => handleDelete(todo.id)}>Delete</Button>\n        )}\n      </ButtonWrapper>\n    </SingleTodoWrapper>\n  );\n}\nfunction App3() {\n  const [content, setContent] = useState(\"\");\n  const id = useRef(3);\n  const whichTabActive = useRef({\n    showAll: true,\n    showDone: false,\n    showUndo: false,\n  });\n\n  const [editContent, setEditContent] = useState(\"\");\n  const [showType, setShowType] = useState(\"all\");\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      content: \"123\",\n      isDone: true,\n      isEditing: false,\n    },\n    {\n      id: 2,\n      content: \"456\",\n      isDone: false,\n      isEditing: false,\n    },\n  ]);\n  function handleEditChange(e) {\n    setEditContent(e.target.value);\n  }\n  function handleContentChange(e) {\n    setContent(e.target.value);\n  }\n  function handleAdd() {\n    if (content === \"\") return alert(\"Please type something in the input box\");\n    setTodos([\n      {\n        id: id.current,\n        content,\n        isDone: false,\n        isEditing: false,\n      },\n      ...todos,\n    ]);\n    id.current++;\n    setContent(\"\");\n  }\n  function handleDelete(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n  function handleEditConfirm(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        } else {\n          return {\n            ...todo,\n            content: editContent,\n            isEditing: !todo.isEditing,\n          };\n        }\n      })\n    );\n  }\n  function handleEditClick(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        } else {\n          return {\n            ...todo,\n            isEditing: !todo.isEditing,\n          };\n        }\n      })\n    );\n  }\n  function handleToggle(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        } else {\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }\n      })\n    );\n  }\n  function handleShow(e) {\n    if (e.target.innerText === \"show all\") {\n      whichTabActive.current = {\n        showAll: true,\n        showDone: false,\n        showUndo: false,\n      };\n      return setShowType(\"all\");\n    }\n    if (e.target.innerText === \"show undo\") {\n      whichTabActive.current = {\n        showAll: false,\n        showDone: false,\n        showUndo: true,\n      };\n      return setShowType(\"undo\");\n    }\n    if (e.target.innerText === \"show done\") {\n      whichTabActive.current = {\n        showAll: false,\n        showDone: true,\n        showUndo: false,\n      };\n      return setShowType(\"done\");\n    }\n  }\n  return (\n    <Background>\n      <Wrapper>\n        <Title>Todo List</Title>\n        <Navbar\n          content={content}\n          handleContentChange={handleContentChange}\n          handleAdd={handleAdd}\n          handleShow={handleShow}\n          whichTabActive={whichTabActive}\n        />\n        {todos\n          .filter((todo) => {\n            if (showType === \"undo\") return todo.isDone === false;\n            if (showType === \"done\") return todo.isDone === true;\n            if (showType === \"all\") return true;\n          })\n          .map((todo) => (\n            <SingleTodo\n              key={todo.id}\n              todo={todo}\n              handleDelete={handleDelete}\n              handleToggle={handleToggle}\n              handleEditClick={handleEditClick}\n              handleEditChange={handleEditChange}\n              handleEditConfirm={handleEditConfirm}\n            ></SingleTodo>\n          ))}\n      </Wrapper>\n    </Background>\n  );\n}\nexport default App3;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\n// import App2 from './App2';\nimport App from \"./App3\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}